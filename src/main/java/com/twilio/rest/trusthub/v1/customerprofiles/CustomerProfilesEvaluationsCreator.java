/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.rest.trusthub.v1.customerprofiles;

import com.twilio.base.Creator;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;

public class CustomerProfilesEvaluationsCreator extends Creator<CustomerProfilesEvaluations> {
    private final String pathCustomerProfileSid;
    private final String policySid;

    /**
     * Construct a new CustomerProfilesEvaluationsCreator.
     *
     * @param pathCustomerProfileSid The unique string that identifies the resource.
     * @param policySid The unique string of a policy
     */
    public CustomerProfilesEvaluationsCreator(final String pathCustomerProfileSid,
                                              final String policySid) {
        this.pathCustomerProfileSid = pathCustomerProfileSid;
        this.policySid = policySid;
    }

    /**
     * Make the request to the Twilio API to perform the create.
     *
     * @param client TwilioRestClient with which to make the request
     * @return Created CustomerProfilesEvaluations
     */
    @Override
    @SuppressWarnings("checkstyle:linelength")
    public CustomerProfilesEvaluations create(final TwilioRestClient client) {
        Request request = new Request(
            HttpMethod.POST,
            Domains.TRUSTHUB.toString(),
            "/v1/CustomerProfiles/" + this.pathCustomerProfileSid + "/Evaluations"
        );

        addPostParams(request);
        Response response = client.request(request);

        if (response == null) {
            throw new ApiConnectionException("CustomerProfilesEvaluations creation failed: Unable to connect to server");
        } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {
            RestException restException = RestException.fromJson(response.getStream(), client.getObjectMapper());
            if (restException == null) {
                throw new ApiException("Server Error, no content");
            }
            throw new ApiException(restException);
        }

        return CustomerProfilesEvaluations.fromJson(response.getStream(), client.getObjectMapper());
    }

    /**
     * Add the requested post parameters to the Request.
     *
     * @param request Request to add post params to
     */
    private void addPostParams(final Request request) {
        if (policySid != null) {
            request.addPostParam("PolicySid", policySid);
        }
    }
}